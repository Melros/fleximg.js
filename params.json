{"name":"Fleximg.js","tagline":"Responsive image resizer/loader - resizes images to fit the desired display dimensions.","body":"#fleximg.js\r\n\r\nAutomatically serves the right image resolution in responsive webdesign.\r\n\r\n[![Build Status](https://travis-ci.org/cioddi/fleximg.js.png)](https://travis-ci.org/cioddi/fleximg.js)\r\n\r\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/fleximg.svg)](https://saucelabs.com/u/fleximg)\r\n\r\n##What does fleximg.js do?\r\n\r\n###What happens on the client side?\r\n\r\n```\r\ncollect all img tags that have \"data-src\" attribute set\r\neach\r\n\tmeasure desired display dimensions\r\n\tset the source of that img tag to a path that leads to the resized image\r\n\r\n```\r\n\r\n###What happens on the server side?\r\n```\r\ncatch the request for that image file\r\n\tif not image_file_exists\r\n\t\tcreate a resized version of the original image\r\n\t\r\n\tdeliver it\r\n```\r\n\r\n##Usage\r\n1. Set the src of img tags to the data-src attribute and make sure to create style definition which affect the image dimension.\r\n2. After the page loads scale.js will be executed and check all img tags for data-src attributes. If found it will set the src of the img to ```/img/fleximg_scale/{IMG_WIDTH}/{IMG_HEIGHT}/{IMG_FILEPATH}```.\r\n3. If that file exists it will be delivered by the apache. If there is no file the request will be passed to scale.php which will scale the image to the requested dimensions, save it to the desired path and redirect to it again.\r\n\r\n##What are the requirements?\r\n* apache \r\n* mod_rewrite\r\n* PHP\r\n* Imagemagick or GD lib\r\n* jquery (only if you dont have it already, else install it using \"$ bower install\")\r\n* [optional] jquery.hammer.js (to detect pinch zoom events. use \"$ bower install\" or download from https://github.com/EightMedia/hammer.js)\r\n\r\n##Installation\r\n1. Make sure your server meets the requirements.\r\n2. Place the contents of this git project somewhere under the document root (e.g. {document_root}/lib/fleximg/) and install requirements using ```$ bower install```\r\n3. create the folder /img/fleximg_scale on your server and make sure its writable for the apache user\r\n4. If you already have a .htaccess file (in {document_root}/.htaccess) put the following lines after \"RewriteEngine On\"\r\n\r\n\t\tRewriteCond %{REQUEST_FILENAME} !-f\r\n\t\tRewriteRule img/fleximg_scale/. /lib/fleximg/scale.php [L]\r\n\r\nMake sure in this line ``` RewriteRule img/fleximg_scale/. /lib/fleximg/scale.php [L] ``` that /lib/fleximg/scale.php points to scale.php on your server.\r\n\r\n5. Open demos/scale.php to see if it works. You should see a resizable image with cows.\r\n6. To insert the script into your projects change the src attribute key in your existing img tags to data-src and load the following scripts.\r\n\r\n\t\t<script src=\"[YOUR_PATH_TO]/jquery/jquery.js\"></script>\r\n\t\t<script src=\"[YOUR_PATH_TO]/jquery.hammer.js\"></script>\r\n\t\t<script src=\"[YOUR_PATH_TO]/scale.js\"></script>\r\n\r\n7. Init fleximg with:\r\n\r\n\t\t<script>\r\n\t\t\tscale.init({ \t\t//default values\r\n\t\t\t\tfireOnResize:\ttrue,\r\n\t\t\t\tfireOnPinchIn:\ttrue,\r\n\t\t\t\tfireOnPinch:\ttrue,\r\n\t\t\t\tfireOnPinchOut:\ttrue,\r\n\t\t\t\tfireOnLoad:\t\ttrue,\r\n\t\t\t\tsteps:\t\t\t50\r\n\t\t\t});\r\n\t\t</script>\r\n\r\n##Test configuration\r\n\r\nOpen http://[your_host]/lib/fleximg/testconfiguration.php in your browser. It will check the following things and probably help you with getting your setup right.\r\n\r\n##Client Options\r\n###Javascript as parameter when calling scale.init (Array options)\r\n\r\n####steps (int)\r\nIf the exact display size of is always rounded up so it can be evenly divided by the steps value to make the caching more efficient and prevent creating thousands of versions of one file.\r\n\r\n####fireOnResize (bool)\r\nImage sizes get readjusted on window resize event\r\n\r\n####fireOnLoad (bool)\r\nImage sizes get readjusted on page load\r\n\r\n####fireOnPinchIn (bool)\r\n... on hammer.js pinchIn event\r\n\r\n####fireOnPinchOut (bool)\r\n... on hammer.js pinchOut event\r\n\r\n####fireOnPinch (bool)\r\n... on hammer.js pinch event\r\n\r\n####hidpi_multiplier (float [0.1-1])\r\nAdjust delivery size images for hidpi screens (hidpi_multiplier will be multiplied with the calculated multiplier [screen_real_pixel_width]/[screen_fake_pixel_width]).\r\n\r\n##Server Options\r\n###PHP as parameter when calling new Fleximg (Array options) in scale.php.\r\n\r\n####steps (int)\r\nShould be set to the same value as it is on the client side as a \"security\" feature to prevent the creation of thousand different sized version per image.\r\n\r\n####use_gdlib (bool)\r\nMake fleximg use gdlib instead of imagemagick.\r\n\r\n####jpeg_compression (integer [1-100])\r\nadjust jpeg compression.\r\n\r\n##Changelog\r\n\r\n* 23.8.2013 - Server Side Options 'steps' and 'use_gdlib'\r\n* 28.8.2013 - Gd lib support/fallback\r\n* 16.10.2013 - Make use of hammer.js optional\r\n\r\n##MIT license\r\nCopyright (c) 2013 Max Tobias Weber\r\n\r\n##additional copyright info\r\n###assets\r\nimg/test.jpg (2013 Loren Kerns http://www.flickr.com/photos/lorenkerns/9262656978/)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}